<?phpclass System {	private $_base_url = NULL;	private $_assets_url = NULL;    private $_images_path = NULL;	public function __construct() {		/**		 * SET ENV CONFIG		 */        if (IS_LIVE) {            $this->setBaseURL("https://".$_SERVER['SERVER_NAME']."/admin/");            $this->setAssetsURL("https://".$_SERVER['SERVER_NAME']."/admin/assets/");			$this->setImagesPath("../front/assets/images/");        } else {            $this->setBaseURL("https://".$_SERVER['SERVER_NAME']."/is295b/admin/");            $this->setAssetsURL("https://".$_SERVER['SERVER_NAME']."/is295b/admin/assets/");            $this->setImagesPath("../front/assets/images/");			        }        $this->meta_title = 'Makakaupo';        $this->meta_desc = 'A Visual Seat Finder for Restaurants';	}	public function setTemplate($template, $masterEnabled = true) {		if (true == $masterEnabled) {			ob_start();			include_once( $template );			$this->contents = ob_get_clean();			include_once( 'View/Master.phtml' );		} else {			include_once( $template );		}	}	public function redirect($controller)	{		header('Location: '. $this->getBaseURL().'/'.$controller);        return false;	}	public function setBaseURL($url) {		$this->_base_url = $url;    }    public function getBaseURL() {    	return $this->_base_url;    }	public function setAssetsURL($url) {		$this->_assets_url = $url;    }    public function getAssetsURL() {    	return $this->_assets_url;    }	public function setImagesPath($path) {        $this->_images_path = $path;    }    public function getImagesPath() {        return $this->_images_path;    }    public function getControllerURL($controller = '', $action = ''){    	$app = Application::GetInstance();    	if (!empty($controller) && !empty($action)) {    		$str = $this->_base_url ."/".strtolower($controller).'/'.$action;    	} elseif(!empty($controller)) {    		$str = $this->_base_url ."/".strtolower($controller);    	} else {    		$str = $this->_base_url ."/".strtolower($app->getController());    	}    	return $str;    }    public function getRequestURL() {    	$request = htmlspecialchars($_GET['request']);    	$str = $this->_base_url."/".$request;    	return $str;    }    public function getFullURL($controller = false, $action = false) {		$request = '';    	$temp = isset($_GET['request']) ? explode('/', $_GET['request']) : array();    	if ($controller) {    		$temp[0] = strtolower($controller);    		if ( $action ) {    			$temp[1] = strtolower($action);    		} else {    			$temp[1] = '/index';    		}    	}    	$request = implode('/', $temp);		$sort = isset($_GET['sort']) ? htmlspecialchars($_GET['sort']) : '';		$order = isset($_GET['order']) ? htmlspecialchars($_GET['order']) : '';		$str = $this->_base_url."/".$request."&sort=".$sort."&order=".$order;		return $str;    }	public function compress($source, $destination, $quality) {        $info = getimagesize($source);        if ($info['mime'] == 'image/jpeg')            $image = imagecreatefromjpeg($source);        elseif ($info['mime'] == 'image/gif')             $image = imagecreatefromgif($source);        elseif ($info['mime'] == 'image/png')             $image = imagecreatefrompng($source);        imagejpeg($image, $destination, $quality);        return $destination;    }}